name: Promote
run-name: "ü§© CD: Promote Green to Blue (${{ github.event.inputs.ref }})"
on:  
  workflow_dispatch:
    inputs:
      ref:
        required: true
      frontend_url:
        required: true
      
jobs:
  
  promote:
    name: üöÄ Promote Green to Blue     
    runs-on: ubuntu-latest
    outputs:
      previous_tag: ${{ steps.previous.outputs.tag }}
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
          
      - name: Find Previous Blue Version
        id: previous
        uses: jimschubert/query-tag-action@v1
        with:
          include: 'blue/*'

      # - name: Change CloudFront "Router"
      #   uses: dawidd6/action-ansible-playbook@v2
      #   with:
      #     playbook: promote.yml
      #     directory: ./util/ansible
      #     options: |
      #       --verbose
      #       --extra-vars "distro_id='${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}' origin_domain='${{ github.event.inputs.frontend_url }}'"
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
      - name: Use Production Workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          path: util/terraform/router
          workspace: anyhasher-production

      - name: Switch the Router
        id: provision
        uses: dflook/terraform-apply@v1
        with:
          workspace: anyhasher-production
          auto_approve: true
          path: util/terraform/router
          variables: |
            frontend_url = "${{ github.event.inputs.frontend_url }}"
      
      - name: Tag Green as New Blue
        if: success()         
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "blue/${{ github.event.inputs.ref }}"

  cleanup_failing_green:
    name: ‚ùå Clean up Failing Green
    needs: [promote]
    if: failure()         
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Cleanup
          inputs: '{ "ref": "${{ github.event.inputs.ref }}", , "env_name": "Env after Failed Promotion" }'

  cleanup_old_blue:
    name: ‚ùå Clean up Previous Blue
    needs: [promote]
    if: success()  
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout Old Blue
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.promote.outputs.previous_tag }}

      - name: Dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Cleanup
          inputs: '{ "ref": "${{ github.sha }}", "env_name": "Decomissioned Blue Env" }'
