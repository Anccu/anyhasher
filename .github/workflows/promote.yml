name: Promote
run-name: "ü§© CD: Promote Green to Blue (${{ github.event.inputs.ref }})"
on:
  workflow_dispatch:
    inputs:
      ref:
        required: true
      s3_bucket_hostname:
        required: true

jobs:
  previous:
    name: Find and Remember Previous Blue Ref
    runs-on: ubuntu
    outputs:
      ref: ${{env.hash}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Find Previous Blue Version
        id: previous
        uses: jimschubert/query-tag-action@v1
        with:
          include: "blue/*" 
          
      - name: Checkout Tag
        uses: actions/checkout@v3
        with:
          ref: steps.previous.outputs.tag
        
      - name: Get Hash
        run: |
          echo "hash=(git rev-parse HEAD)" >> $GITHUB_ENV
          
  promote:
    name: üöÄ Promote Green to Blue
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: ${{ steps.router.outputs.website_url }}
    outputs:
      previous_tag: ${{ steps.previous.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Use Production Workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          path: util/terraform/router
          workspace: anyhasher-production

      - name: Switch the Router
        id: router
        uses: dflook/terraform-apply@v1
        with:
          workspace: anyhasher-production
          auto_approve: true
          path: util/terraform/router
          variables: |
            s3_bucket_hostname = "${{ github.event.inputs.s3_bucket_hostname }}"
            origin_id = "${{ github.event.inputs.s3_bucket_hostname }}"

      - name: Tag Green as New Blue
        if: success()
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "blue/${{ github.event.inputs.ref }}"

  cleanup_failing_green:
    name: ‚ùå Clean up Failing Green
    needs: [promote]
    if: failure()
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Cleanup
          inputs: '{ "ref": "${{ github.event.inputs.ref }}", "env_name": "Env after Failed Promotion" }'

  cleanup_old_blue:
    name: ‚ùå Clean up Previous Blue
    needs: [promote]
    if: success()
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Cleanup
          inputs: '{ "ref": "${{ needs.previous.outputs.ref }}", "env_name": "Decomissioned Blue Env" }'
