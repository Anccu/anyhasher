name: Deploy
on:
  push:
  workflow_dispatch:
  workflow_run:
    workflows:
      - Backend CI
      - Frontend CI
    types:
      - completed

concurrency: 
  group: ${{ github.run_id }}
  # cancel-in-progress: true

jobs:
  deploy_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 1.2.9

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create Infrastructure
        id: be_infra
        run: |
          cd util/terraform/backend
          echo "public_key=\"${{ secrets.SSH_PUBLIC_KEY }}\"" >> terraform.tfvars
          terraform init 
          terraform plan 
          terraform apply -auto-approve
          export EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)
          echo $EC2_PUBLIC_IP
          echo "EC2_HOST=${EC2_PUBLIC_IP}" >> $GITHUB_ENV
          echo "::set-output name=backend_url::$EC2_PUBLIC_IP"        

      - name: Get Backend Artifact
        uses: actions/download-artifact@v2
        with:
          name: backend-artifact
          path: backend/build/
  
      - name: Configure Infrastructure
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: deploy.yml
          directory: ./util/ansible
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          inventory: |
            [ec2]
            ${{ env.EC2_HOST }}

    outputs:
      url: ${{ steps.be_infra.outputs.backend_url }}
    
  deploy_frontend:
    needs: [deploy_backend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 1.2.9

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get Frontend Artifact
        uses: actions/download-artifact@v2
        with:
          name: frontend-build
          path: frontend/build
  
      - name: Prepare frontend with backend url
        run: |
          export existing="__BACKEND_URL_PLACEHOLDER__"
          export replacement="${{ env.EC2_HOST }}"
          find frontend/build -type f -name "*.*"" -print0 | xargs -0 sed -i '' -e "s/$existing/$replacement/g"

      - name: Create Frontend Infrastructure
        id: fe_infra
        run: |
          cd util/terraform/frontend
          terraform init 
          terraform plan 
          terraform apply -auto-approve
          export S3_BUCKET_NAME=$(terraform output -raw bucket_name)
          export S3_URL=$(terraform output -raw website_endpoint)
          echo "::set-output name=frontend_url::$S3_URL"
          echo $S3_URL          
          aws s3 cp frontend/build s3://$S3_BUCKET_NAME --region=us-east-1 --recursive
    
    outputs:
      url: ${{ steps.fe_infra.outputs.frontend_url }}
        
  verify-frontend:
    runs-on: ubuntu-latest
    needs: [deploy_frontend]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run Frontend Smoke Test
        run: |
          export TEST_URL=${{ needs.deploy_frontend.outputs.url }}
          cd e2e
          npm install
          npm run frontend-smoke   
      
  verify-backend:
    runs-on: ubuntu-latest
    needs: [deploy_backend]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run Backend Smoke Test
        run: |
          export BACKEND_URL=${{ needs.deploy_backend.outputs.url }}
          cd e2e
          chmod +x backend-smoke.sh
          ./backend-smoke.sh
