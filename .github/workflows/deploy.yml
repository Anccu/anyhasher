name: Deploy
on:  
  workflow_dispatch:
  workflow_run:
    workflows:
      - Backend CI
      - Frontend CI
    types:
      - completed

concurrency: 
  group: ${{ github.run_id }}
  # cancel-in-progress: true

jobs:
  deploy_backend:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.be_infra.outputs.backend_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 1.2.9

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create Infrastructure
        id: be_infra
        run: |
          cd util/terraform/backend
          terraform init 
          terraform plan 
          terraform apply -auto-approve
          export EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)
          echo "EC2_HOST=${EC2_PUBLIC_IP}" >> $GITHUB_ENV
          echo "::set-output name=backend_url::$EC2_PUBLIC_IP"        
    
  deploy_frontend:
    needs: [deploy_backend]
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.fe_infra.outputs.frontend_url }}    
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 1.2.9

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
      - name: Create Frontend Infrastructure
        id: fe_infra
        run: |
          cd util/terraform/frontend
          terraform init 
          terraform plan 
          terraform apply -auto-approve
          export S3_BUCKET_NAME=$(terraform output -raw bucket_name)
          export S3_URL=$(terraform output -raw website_endpoint)
          echo "::set-output name=frontend_url::$S3_URL"