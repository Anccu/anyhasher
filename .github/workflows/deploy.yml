name: Deploy
on:
  push:
    tags: 
      - 'candidate-*'
   
jobs:

  provision_green_backend:
    runs-on: ubuntu-latest
    outputs:
      backend_url: ${{ steps.provision.outputs.backend_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 1.2.9

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
      - name: Use commit workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          path: util/terraform/backend
          workspace: ${{ github.sha }}
      
      - name: Provision Backend Infrastructure
        id: provision
        uses: dflook/terraform-apply@v1
        with:
          auto_approve: true
          path: util/terraform/backend
          variables: |
            instance_name = "anyhasher-backend-${{ github.sha }}"

      - name: Cleanup On Failure
        if: failure()         
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "cleanup-{{ github.sha }}"
          message: "Failed attempt to provision backend."
    
  
  provision_green_frontend:
    outputs:
      frontend_url: ${{ steps.provision.outputs.frontend_url }}
      bucket_name: ${{ steps.provision.outputs.bucket_name }}
    runs-on: ubuntu-latest
    steps:      
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 1.2.9

      - name: Use commit workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          path: util/terraform/frontend
          workspace: ${{ github.sha }}
      
      - name: Provision Frontend Infrastructure
        id: provision
        uses: dflook/terraform-apply@v1
        with:
          auto_approve: true
          path: util/terraform/frontend
          variables: |
            bucket_name = "anyhasher-frontend-${{ github.sha }}"
      
      - name: Cleanup On Failure
        if: failure()         
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "cleanup-{{ github.sha }}"
          message: "Failed attempt to provision frontend."
    
  deploy_green_backend:
    needs: [provision_backend]
    runs-on: ubuntu-latest
    environment: 
      name: Green Backend Environment
      url: https://${{ needs.provision_backend.outputs.backend_url }}
    steps:      
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Get Backend Artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: backend.yml
          name: backend-artifact
          path: backend/build/
      
      - name: Configure Backend Infrastructure
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: deploy.yml
          directory: ./util/ansible
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          inventory: |
            [ec2]
            ${{ needs.provision_backend.outputs.backend_url }}
          options: |
            --verbose            
    
      - name: Cleanup On Failure
        if: failure()         
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "cleanup-{{ github.sha }}"
          message: "Failed attempt to deploy backend."
    
  deploy_green_frontend:
    needs: [provision_backend,provision_frontend]
    runs-on: ubuntu-latest
    environment: 
      name: Green Frontend Environment
      url: https://${{ needs.provision_frontend.outputs.frontend_url }}
    steps:      
      - name: Get Frontend Artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: frontend.yml
          name: frontend-artifact
          path: frontend/build
  
      - name: Prepare frontend with backend url
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "__BACKEND_URL_PLACEHOLDER__"
          replace: "${{ needs.provision_backend.outputs.backend_url }}"
          regex: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
      - name: Upload frontend to S3 Bucket
        run: |
          aws s3 cp frontend/build s3://${{ needs.provision_frontend.outputs.bucket_name }} --region=us-east-1 --recursive
      
      - name: Cleanup On Failure
        if: failure()         
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "cleanup-{{ github.sha }}"
          message: "Failed attempt to deploy frontend."
    
  tag-prerelease:
    needs: [deploy_green_frontend,deploy_green_backend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create the tag
        run: |
          git tag "prerelease-${{ github.sha }}"
          git push origin "prerelease-${{ github.sha }}"               